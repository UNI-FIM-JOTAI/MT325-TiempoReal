CCS PCM C Compiler, Version 5.008, 5967               16-sep-14 15:13

               Filename:   D:\IGNACIO\ProgramacionGitHub\MT325-TiempoReal\Sistema\Programa PIC\SistemaPIC\SistemaPIC16F877a.lst

               ROM used:   504 words (6%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           12 (3%) worst case
               Stack used: 2 locations
               Stack size: 7

*
0000:  NOP
0001:  MOVLW  01
0002:  MOVWF  0A
0003:  GOTO   1C2
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
0004:  DATA 45,39
0005:  DATA F2,37
0006:  DATA 72,10
0007:  DATA E4,32
0008:  DATA A0,31
0009:  DATA EF,36
000A:  DATA 61,37
000B:  DATA E4,37
000C:  DATA 00,00
000D:  DATA D6,32
000E:  DATA F2,39
000F:  DATA E9,37
0010:  DATA 6E,10
0011:  DATA E4,32
0012:  DATA A0,29
0013:  DATA 6F,33
0014:  DATA F4,3B
0015:  DATA 61,39
0016:  DATA 65,1D
0017:  DATA 20,3B
0018:  DATA 31,00
0019:  DATA CC,32
001A:  DATA 64,10
001B:  DATA EE,37
001C:  DATA A0,32
001D:  DATA EE,31
001E:  DATA 6F,37
001F:  DATA 74,39
0020:  DATA 61,32
0021:  DATA 6F,00
0022:  DATA 45,37
0023:  DATA E3,32
0024:  DATA 6E,32
0025:  DATA 69,32
0026:  DATA 6F,10
0027:  DATA CC,32
0028:  DATA 64,10
0029:  DATA A5,31
002A:  DATA 00,00
002B:  DATA CC,32
002C:  DATA 64,10
002D:  DATA EE,37
002E:  DATA A0,32
002F:  DATA EE,31
0030:  DATA 6F,37
0031:  DATA 74,39
0032:  DATA 61,32
0033:  DATA 6F,00
0034:  DATA 41,38
0035:  DATA E1,33
0036:  DATA 61,32
0037:  DATA 6F,10
0038:  DATA CC,32
0039:  DATA 64,10
003A:  DATA A5,31
003B:  DATA 00,00
003C:  DATA 45,37
003D:  DATA E3,32
003E:  DATA 6E,32
003F:  DATA 69,32
0040:  DATA EF,39
0041:  DATA 20,2A
0042:  DATA 6F,32
0043:  DATA EF,39
0044:  DATA 00,00
0045:  DATA 41,38
0046:  DATA E1,33
0047:  DATA 61,32
0048:  DATA EF,39
0049:  DATA 20,2A
004A:  DATA 6F,32
004B:  DATA EF,39
004C:  DATA 00,00
*
0055:  MOVF   0B,W
0056:  MOVWF  22
0057:  BCF    0B.7
0058:  BSF    03.5
0059:  BSF    03.6
005A:  BSF    0C.7
005B:  BSF    0C.0
005C:  NOP
005D:  NOP
005E:  BCF    03.5
005F:  MOVF   0C,W
0060:  ANDLW  7F
0061:  BTFSC  03.2
0062:  GOTO   09E
0063:  BCF    03.6
0064:  MOVWF  23
0065:  BSF    03.6
0066:  MOVF   0D,W
0067:  BCF    03.6
0068:  MOVWF  24
0069:  BSF    03.6
006A:  MOVF   0F,W
006B:  BCF    03.6
006C:  MOVWF  25
006D:  MOVF   23,W
006E:  BTFSS  0C.4
006F:  GOTO   06E
0070:  MOVWF  19
0071:  MOVF   24,W
0072:  BSF    03.6
0073:  MOVWF  0D
0074:  BCF    03.6
0075:  MOVF   25,W
0076:  BSF    03.6
0077:  MOVWF  0F
0078:  BSF    03.5
0079:  BSF    0C.7
007A:  BSF    0C.0
007B:  NOP
007C:  NOP
007D:  BCF    03.5
007E:  RLF    0C,W
007F:  RLF    0E,W
0080:  ANDLW  7F
0081:  BTFSC  03.2
0082:  GOTO   09E
0083:  BCF    03.6
0084:  MOVWF  23
0085:  BSF    03.6
0086:  MOVF   0D,W
0087:  BCF    03.6
0088:  MOVWF  24
0089:  BSF    03.6
008A:  MOVF   0F,W
008B:  BCF    03.6
008C:  MOVWF  25
008D:  MOVF   23,W
008E:  BTFSS  0C.4
008F:  GOTO   08E
0090:  MOVWF  19
0091:  MOVF   24,W
0092:  BSF    03.6
0093:  MOVWF  0D
0094:  BCF    03.6
0095:  MOVF   25,W
0096:  BSF    03.6
0097:  MOVWF  0F
0098:  INCF   0D,F
0099:  BTFSC  03.2
009A:  INCF   0F,F
009B:  BCF    03.6
009C:  GOTO   058
009D:  BSF    03.6
009E:  BCF    03.6
009F:  BTFSC  22.7
00A0:  BSF    0B.7
00A1:  RETURN
*
00C1:  MOVF   0B,W
00C2:  MOVWF  23
00C3:  BCF    0B.7
00C4:  BSF    03.5
00C5:  BSF    03.6
00C6:  BSF    0C.7
00C7:  BSF    0C.0
00C8:  NOP
00C9:  NOP
00CA:  BTFSC  03.0
00CB:  GOTO   0F4
00CC:  BCF    03.5
00CD:  MOVF   0C,W
00CE:  ANDLW  7F
00CF:  BCF    03.6
00D0:  MOVWF  24
00D1:  BSF    03.6
00D2:  MOVF   0D,W
00D3:  BCF    03.6
00D4:  MOVWF  25
00D5:  BSF    03.6
00D6:  MOVF   0F,W
00D7:  BCF    03.6
00D8:  MOVWF  26
00D9:  MOVF   24,W
00DA:  BTFSS  0C.4
00DB:  GOTO   0DA
00DC:  MOVWF  19
00DD:  MOVF   25,W
00DE:  BSF    03.6
00DF:  MOVWF  0D
00E0:  BCF    03.6
00E1:  MOVF   26,W
00E2:  BSF    03.6
00E3:  MOVWF  0F
00E4:  BSF    03.5
00E5:  BSF    0C.7
00E6:  BSF    0C.0
00E7:  NOP
00E8:  NOP
00E9:  BCF    03.5
00EA:  BCF    03.6
00EB:  DECFSZ 22,F
00EC:  GOTO   0EE
00ED:  GOTO   0F1
00EE:  BSF    03.5
00EF:  BSF    03.6
00F0:  GOTO   0F4
00F1:  GOTO   114
00F2:  BSF    03.5
00F3:  BSF    03.6
00F4:  BCF    03.5
00F5:  RLF    0C,W
00F6:  RLF    0E,W
00F7:  ANDLW  7F
00F8:  BCF    03.6
00F9:  MOVWF  24
00FA:  BSF    03.6
00FB:  MOVF   0D,W
00FC:  BCF    03.6
00FD:  MOVWF  25
00FE:  BSF    03.6
00FF:  MOVF   0F,W
0100:  BCF    03.6
0101:  MOVWF  26
0102:  MOVF   24,W
0103:  BTFSS  0C.4
0104:  GOTO   103
0105:  MOVWF  19
0106:  MOVF   25,W
0107:  BSF    03.6
0108:  MOVWF  0D
0109:  BCF    03.6
010A:  MOVF   26,W
010B:  BSF    03.6
010C:  MOVWF  0F
010D:  INCF   0D,F
010E:  BTFSC  03.2
010F:  INCF   0F,F
0110:  BCF    03.0
0111:  BCF    03.6
0112:  DECFSZ 22,F
0113:  GOTO   0C4
0114:  BTFSC  23.7
0115:  BSF    0B.7
0116:  RETURN
....................  
.................... #list 
....................  
.................... #device ICD=TRUE 
.................... #device adc=10 
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP  
.................... #use delay(clock=10000000)  
*
00AC:  MOVLW  22
00AD:  MOVWF  04
00AE:  BCF    03.7
00AF:  MOVF   00,W
00B0:  BTFSC  03.2
00B1:  GOTO   0C0
00B2:  MOVLW  03
00B3:  MOVWF  78
00B4:  CLRF   77
00B5:  DECFSZ 77,F
00B6:  GOTO   0B5
00B7:  DECFSZ 78,F
00B8:  GOTO   0B4
00B9:  MOVLW  3C
00BA:  MOVWF  77
00BB:  DECFSZ 77,F
00BC:  GOTO   0BB
00BD:  GOTO   0BE
00BE:  DECFSZ 00,F
00BF:  GOTO   0B2
00C0:  RETURN
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8)  
.................... #use FAST_IO(A)  
.................... #use FAST_IO(B) 
.................... #use FAST_IO(C)  
....................  
....................  
.................... // ************************************** 
.................... // Definicion de variables 
.................... char q; 
.................... int1 led_num; 
.................... // ************************************** 
....................  
.................... // ************************************** 
.................... // Declaracion de Funciones 
.................... void Cargar_configuracion(); 
.................... void Configurar_interrupciones(); 
.................... void version(); 
.................... void encender_led (); 
.................... void apagar_led (); 
.................... void encender_all (); 
.................... void apagar_all (); 
.................... //*************************************** 
....................  
.................... // ************************************** 
.................... // FUNCION PRINCIPAL 
.................... void main() 
*
01C2:  MOVF   03,W
01C3:  ANDLW  1F
01C4:  MOVWF  03
01C5:  MOVLW  40
01C6:  BSF    03.5
01C7:  MOVWF  19
01C8:  MOVLW  A6
01C9:  MOVWF  18
01CA:  MOVLW  90
01CB:  BCF    03.5
01CC:  MOVWF  18
01CD:  BSF    03.5
01CE:  BSF    1F.0
01CF:  BSF    1F.1
01D0:  BSF    1F.2
01D1:  BCF    1F.3
01D2:  MOVLW  07
01D3:  MOVWF  1C
01D4:  BCF    03.7
.................... { 
....................    Cargar_configuracion(); 
01D5:  BCF    03.5
01D6:  GOTO   04D
.................... for(;;){ 
....................       q=getch(); 
01D7:  BTFSS  0C.5
01D8:  GOTO   1D7
01D9:  MOVF   1A,W
01DA:  MOVWF  20
....................       switch(q){ 
01DB:  MOVF   20,W
01DC:  XORLW  76
01DD:  BTFSC  03.2
01DE:  GOTO   1E6
01DF:  XORLW  13
01E0:  BTFSC  03.2
01E1:  GOTO   1E8
01E2:  XORLW  04
01E3:  BTFSC  03.2
01E4:  GOTO   1EA
01E5:  GOTO   1EC
....................          case 'v': version(); 
01E6:  GOTO   0A2
....................          break; 
01E7:  GOTO   1F3
....................          case 'e': encender_led(); 
01E8:  GOTO   117
....................          break; 
01E9:  GOTO   1F3
....................          case 'a': apagar_led(); 
01EA:  GOTO   16D
....................          break; 
01EB:  GOTO   1F3
....................          default: printf("Error de comando"); 
01EC:  MOVLW  04
01ED:  BSF    03.6
01EE:  MOVWF  0D
01EF:  MOVLW  00
01F0:  MOVWF  0F
01F1:  BCF    03.6
01F2:  CALL   055
....................          break; 
....................          } 
....................       delay_ms(100); 
01F3:  MOVLW  64
01F4:  MOVWF  22
01F5:  CALL   0AC
01F6:  GOTO   1D7
....................    } 
.................... } 
.................... // ************************************** 
01F7:  GOTO   1F7
....................  
....................  
.................... // **************************************** 
.................... // Definicion de las Funciones 
....................  
.................... void Cargar_configuracion(){ 
....................    SET_TRIS_B(0x00);    //configura PORTB entrada / 0=salida / 1=entrada 
*
004D:  MOVLW  00
004E:  BSF    03.5
004F:  MOVWF  06
....................    OUTPUT_B(0x00);   //inicializando PORTD en 0x00 
0050:  BCF    03.5
0051:  CLRF   06
0052:  BCF    0A.3
0053:  BCF    0A.4
0054:  GOTO   1D7 (RETURN)
....................    //SET_TRIS_D(0x00);    //configura PORTD salida 
....................    } 
....................  
.................... void Configurar_interrupciones(){ 
....................    //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_2);   //Configuración timer0 
....................    //set_timer0 (0x1B);                    //Carga del timer0 
....................    //enable_interrupts(INT_TIMER0);       //Habilita interrupción timer0 
....................  
....................    //enable_interrupts(INT_RB);       // Habilitando interrupcion RB /RB4-RB7 
....................    //bit_clear(OPTION_REG,7);         // Habilita el Pull-UP de RB->OPTION_REG,RBPU 
....................    //RBPU=0;                            // Habilita el PullUP de RB  
....................    //enable_interrupts(GLOBAL);       // Habilita las interrupciones 
.................... } 
....................  
.................... void version(){ 
....................    printf("Version de Software: v1"); 
*
00A2:  MOVLW  0D
00A3:  BSF    03.6
00A4:  MOVWF  0D
00A5:  MOVLW  00
00A6:  MOVWF  0F
00A7:  BCF    03.6
00A8:  CALL   055
00A9:  BCF    0A.3
00AA:  BCF    0A.4
00AB:  GOTO   1F3 (RETURN)
....................    } 
....................  
.................... void encender_led (){ 
....................    led_num = 0; 
*
0117:  BCF    21.0
....................    q=getch(); 
0118:  BTFSS  0C.5
0119:  GOTO   118
011A:  MOVF   1A,W
011B:  MOVWF  20
....................       switch(q){ 
011C:  MOVF   20,W
011D:  XORLW  30
011E:  BTFSC  03.2
011F:  GOTO   133
0120:  XORLW  01
0121:  BTFSC  03.2
0122:  GOTO   136
0123:  XORLW  03
0124:  BTFSC  03.2
0125:  GOTO   139
0126:  XORLW  01
0127:  BTFSC  03.2
0128:  GOTO   13C
0129:  XORLW  07
012A:  BTFSC  03.2
012B:  GOTO   13F
012C:  XORLW  01
012D:  BTFSC  03.2
012E:  GOTO   142
012F:  XORLW  54
0130:  BTFSC  03.2
0131:  GOTO   145
0132:  GOTO   150
....................          case '0': output_high(PIN_B0); 
0133:  BSF    06.0
....................                    led_num = 1; 
0134:  BSF    21.0
....................          break; 
0135:  GOTO   157
....................          case '1': output_high(PIN_B1); 
0136:  BSF    06.1
....................                    led_num = 1; 
0137:  BSF    21.0
....................          break; 
0138:  GOTO   157
....................          case '2': output_high(PIN_B2); 
0139:  BSF    06.2
....................                    led_num = 1; 
013A:  BSF    21.0
....................          break; 
013B:  GOTO   157
....................          case '3': output_high(PIN_B3); 
013C:  BSF    06.3
....................                    led_num = 1; 
013D:  BSF    21.0
....................          break; 
013E:  GOTO   157
....................          case '4': output_high(PIN_B4); 
013F:  BSF    06.4
....................                    led_num = 1; 
0140:  BSF    21.0
....................          break; 
0141:  GOTO   157
....................          case '5': output_high(PIN_B5); 
0142:  BSF    06.5
....................                    led_num = 1; 
0143:  BSF    21.0
....................          break; 
0144:  GOTO   157
....................          case 'a': encender_all (); 
....................          break; 
*
014F:  GOTO   157
....................          default: printf("Led no encontrado"); 
0150:  MOVLW  19
0151:  BSF    03.6
0152:  MOVWF  0D
0153:  MOVLW  00
0154:  MOVWF  0F
0155:  BCF    03.6
0156:  CALL   055
....................          break; 
....................          } 
....................       delay_ms(100); 
0157:  MOVLW  64
0158:  MOVWF  22
0159:  CALL   0AC
....................        
....................    if (led_num == 1){ 
015A:  BTFSS  21.0
015B:  GOTO   16A
....................       printf("Encendido Led %c",q); 
015C:  MOVLW  22
015D:  BSF    03.6
015E:  MOVWF  0D
015F:  MOVLW  00
0160:  MOVWF  0F
0161:  BCF    03.0
0162:  MOVLW  0E
0163:  BCF    03.6
0164:  MOVWF  22
0165:  CALL   0C1
0166:  MOVF   20,W
0167:  BTFSS  0C.4
0168:  GOTO   167
0169:  MOVWF  19
....................    } 
016A:  BCF    0A.3
016B:  BCF    0A.4
016C:  GOTO   1F3 (RETURN)
.................... } 
....................  
....................  
.................... void apagar_led (){ 
....................    led_num = 0; 
016D:  BCF    21.0
....................    q=getch(); 
016E:  BTFSS  0C.5
016F:  GOTO   16E
0170:  MOVF   1A,W
0171:  MOVWF  20
....................       switch(q){ 
0172:  MOVF   20,W
0173:  XORLW  30
0174:  BTFSC  03.2
0175:  GOTO   189
0176:  XORLW  01
0177:  BTFSC  03.2
0178:  GOTO   18C
0179:  XORLW  03
017A:  BTFSC  03.2
017B:  GOTO   18F
017C:  XORLW  01
017D:  BTFSC  03.2
017E:  GOTO   192
017F:  XORLW  07
0180:  BTFSC  03.2
0181:  GOTO   195
0182:  XORLW  01
0183:  BTFSC  03.2
0184:  GOTO   198
0185:  XORLW  54
0186:  BTFSC  03.2
0187:  GOTO   19B
0188:  GOTO   1A5
....................          case '0': output_low(PIN_B0); 
0189:  BCF    06.0
....................                    led_num = 1; 
018A:  BSF    21.0
....................          break; 
018B:  GOTO   1AC
....................          case '1': output_low(PIN_B1); 
018C:  BCF    06.1
....................                    led_num = 1; 
018D:  BSF    21.0
....................          break; 
018E:  GOTO   1AC
....................          case '2': output_low(PIN_B2); 
018F:  BCF    06.2
....................                    led_num = 1; 
0190:  BSF    21.0
....................          break; 
0191:  GOTO   1AC
....................          case '3': output_low(PIN_B3); 
0192:  BCF    06.3
....................                    led_num = 1; 
0193:  BSF    21.0
....................          break; 
0194:  GOTO   1AC
....................          case '4': output_low(PIN_B4); 
0195:  BCF    06.4
....................                    led_num = 1; 
0196:  BSF    21.0
....................          break; 
0197:  GOTO   1AC
....................          case '5': output_low(PIN_B5); 
0198:  BCF    06.5
....................                    led_num = 1; 
0199:  BSF    21.0
....................          break; 
019A:  GOTO   1AC
....................          case 'a': apagar_all (); 
....................          break; 
*
01A4:  GOTO   1AC
....................          default: printf("Led no encontrado"); 
01A5:  MOVLW  2B
01A6:  BSF    03.6
01A7:  MOVWF  0D
01A8:  MOVLW  00
01A9:  MOVWF  0F
01AA:  BCF    03.6
01AB:  CALL   055
....................          break; 
....................          } 
....................       delay_ms(100); 
01AC:  MOVLW  64
01AD:  MOVWF  22
01AE:  CALL   0AC
....................  
....................    if (led_num == 1){ 
01AF:  BTFSS  21.0
01B0:  GOTO   1BF
....................       printf("Apagado Led %c",q); 
01B1:  MOVLW  34
01B2:  BSF    03.6
01B3:  MOVWF  0D
01B4:  MOVLW  00
01B5:  MOVWF  0F
01B6:  BCF    03.0
01B7:  MOVLW  0C
01B8:  BCF    03.6
01B9:  MOVWF  22
01BA:  CALL   0C1
01BB:  MOVF   20,W
01BC:  BTFSS  0C.4
01BD:  GOTO   1BC
01BE:  MOVWF  19
....................    } 
01BF:  BCF    0A.3
01C0:  BCF    0A.4
01C1:  GOTO   1F3 (RETURN)
.................... } 
....................  
.................... void encender_all (){ 
....................    OUTPUT_B(0xFF); 
*
0145:  MOVLW  FF
0146:  MOVWF  06
....................    printf("Encendidos Todos"); 
0147:  MOVLW  3C
0148:  BSF    03.6
0149:  MOVWF  0D
014A:  MOVLW  00
014B:  MOVWF  0F
014C:  BCF    03.6
014D:  CALL   055
014E:  NOP
.................... } 
....................  
.................... void apagar_all (){ 
....................    OUTPUT_B(0x00); 
*
019B:  CLRF   06
....................    printf("Apagados Todos"); 
019C:  MOVLW  45
019D:  BSF    03.6
019E:  MOVWF  0D
019F:  MOVLW  00
01A0:  MOVWF  0F
01A1:  BCF    03.6
01A2:  CALL   055
01A3:  NOP
.................... } 
.................... //***************************************** 
....................  

Configuration Fuses:
   Word  1: 373A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT DEBUG NOPROTECT

   Some fuses have been forced to be compatible with the ICD debugger.
