CCS PCM C Compiler, Version 5.008, 5967               16-sep-14 14:51

               Filename:   D:\IGNACIO\ProgramacionGitHub\MT325-TiempoReal\Sistema\Programa PIC\SistemaPIC\SistemaPIC16F877a.lst

               ROM used:   237 words (3%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           10 (3%) worst case
               Stack used: 2 locations
               Stack size: 7

*
0000:  NOP
0001:  MOVLW  00
0002:  MOVWF  0A
0003:  GOTO   0B7
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
0004:  DATA 45,39
0005:  DATA F2,37
0006:  DATA 72,10
0007:  DATA E4,32
0008:  DATA A0,31
0009:  DATA EF,36
000A:  DATA 61,37
000B:  DATA E4,37
000C:  DATA 00,00
000D:  DATA D6,32
000E:  DATA F2,39
000F:  DATA E9,37
0010:  DATA 6E,10
0011:  DATA E4,32
0012:  DATA A0,29
0013:  DATA 6F,33
0014:  DATA F4,3B
0015:  DATA 61,39
0016:  DATA 65,1D
0017:  DATA 20,3B
0018:  DATA 31,00
0019:  DATA 45,37
001A:  DATA E3,32
001B:  DATA 6E,32
001C:  DATA 69,32
001D:  DATA EF,39
001E:  DATA 20,2A
001F:  DATA 6F,32
0020:  DATA EF,39
0021:  DATA 00,00
0022:  DATA 41,38
0023:  DATA E1,33
0024:  DATA 61,32
0025:  DATA EF,39
0026:  DATA 20,2A
0027:  DATA 6F,32
0028:  DATA EF,39
0029:  DATA 00,00
*
0032:  MOVF   0B,W
0033:  MOVWF  21
0034:  BCF    0B.7
0035:  BSF    03.5
0036:  BSF    03.6
0037:  BSF    0C.7
0038:  BSF    0C.0
0039:  NOP
003A:  NOP
003B:  BCF    03.5
003C:  MOVF   0C,W
003D:  ANDLW  7F
003E:  BTFSC  03.2
003F:  GOTO   07B
0040:  BCF    03.6
0041:  MOVWF  22
0042:  BSF    03.6
0043:  MOVF   0D,W
0044:  BCF    03.6
0045:  MOVWF  23
0046:  BSF    03.6
0047:  MOVF   0F,W
0048:  BCF    03.6
0049:  MOVWF  24
004A:  MOVF   22,W
004B:  BTFSS  0C.4
004C:  GOTO   04B
004D:  MOVWF  19
004E:  MOVF   23,W
004F:  BSF    03.6
0050:  MOVWF  0D
0051:  BCF    03.6
0052:  MOVF   24,W
0053:  BSF    03.6
0054:  MOVWF  0F
0055:  BSF    03.5
0056:  BSF    0C.7
0057:  BSF    0C.0
0058:  NOP
0059:  NOP
005A:  BCF    03.5
005B:  RLF    0C,W
005C:  RLF    0E,W
005D:  ANDLW  7F
005E:  BTFSC  03.2
005F:  GOTO   07B
0060:  BCF    03.6
0061:  MOVWF  22
0062:  BSF    03.6
0063:  MOVF   0D,W
0064:  BCF    03.6
0065:  MOVWF  23
0066:  BSF    03.6
0067:  MOVF   0F,W
0068:  BCF    03.6
0069:  MOVWF  24
006A:  MOVF   22,W
006B:  BTFSS  0C.4
006C:  GOTO   06B
006D:  MOVWF  19
006E:  MOVF   23,W
006F:  BSF    03.6
0070:  MOVWF  0D
0071:  BCF    03.6
0072:  MOVF   24,W
0073:  BSF    03.6
0074:  MOVWF  0F
0075:  INCF   0D,F
0076:  BTFSC  03.2
0077:  INCF   0F,F
0078:  BCF    03.6
0079:  GOTO   035
007A:  BSF    03.6
007B:  BCF    03.6
007C:  BTFSC  21.7
007D:  BSF    0B.7
007E:  RETURN
....................  
.................... #list 
....................  
.................... #device ICD=TRUE 
.................... #device adc=10 
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP  
.................... #use delay(clock=10000000)  
*
00A0:  MOVLW  21
00A1:  MOVWF  04
00A2:  BCF    03.7
00A3:  MOVF   00,W
00A4:  BTFSC  03.2
00A5:  GOTO   0B4
00A6:  MOVLW  03
00A7:  MOVWF  78
00A8:  CLRF   77
00A9:  DECFSZ 77,F
00AA:  GOTO   0A9
00AB:  DECFSZ 78,F
00AC:  GOTO   0A8
00AD:  MOVLW  3C
00AE:  MOVWF  77
00AF:  DECFSZ 77,F
00B0:  GOTO   0AF
00B1:  GOTO   0B2
00B2:  DECFSZ 00,F
00B3:  GOTO   0A6
00B4:  BCF    0A.3
00B5:  BCF    0A.4
00B6:  GOTO   0EB (RETURN)
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8)  
.................... #use FAST_IO(A)  
.................... #use FAST_IO(B) 
.................... #use FAST_IO(C)  
....................  
....................  
.................... // ************************************** 
.................... // Definicion de variables 
.................... char q; 
.................... // ************************************** 
....................  
.................... // ************************************** 
.................... // Declaracion de Funciones 
.................... void Cargar_configuracion(); 
.................... void Configurar_interrupciones(); 
.................... void version(); 
.................... void encender_all (); 
.................... void apagar_all (); 
.................... //*************************************** 
....................  
.................... // ************************************** 
.................... // FUNCION PRINCIPAL 
.................... void main() 
00B7:  MOVF   03,W
00B8:  ANDLW  1F
00B9:  MOVWF  03
00BA:  MOVLW  40
00BB:  BSF    03.5
00BC:  MOVWF  19
00BD:  MOVLW  A6
00BE:  MOVWF  18
00BF:  MOVLW  90
00C0:  BCF    03.5
00C1:  MOVWF  18
00C2:  BSF    03.5
00C3:  BSF    1F.0
00C4:  BSF    1F.1
00C5:  BSF    1F.2
00C6:  BCF    1F.3
00C7:  MOVLW  07
00C8:  MOVWF  1C
00C9:  BCF    03.7
.................... { 
....................    Cargar_configuracion(); 
00CA:  BCF    03.5
00CB:  GOTO   02A
.................... for(;;){ 
....................       q=getch(); 
00CC:  BTFSS  0C.5
00CD:  GOTO   0CC
00CE:  MOVF   1A,W
00CF:  MOVWF  20
....................       switch(q){ 
00D0:  MOVF   20,W
00D1:  XORLW  76
00D2:  BTFSC  03.2
00D3:  GOTO   0DB
00D4:  XORLW  13
00D5:  BTFSC  03.2
00D6:  GOTO   0DD
00D7:  XORLW  04
00D8:  BTFSC  03.2
00D9:  GOTO   0DF
00DA:  GOTO   0E1
....................          case 'v': version(); 
00DB:  GOTO   07F
....................          break; 
00DC:  GOTO   0E8
....................          case 'e': encender_all(); 
00DD:  GOTO   089
....................          break; 
00DE:  GOTO   0E8
....................          case 'a': apagar_all(); 
00DF:  GOTO   095
....................          break; 
00E0:  GOTO   0E8
....................          default: printf("Error de comando"); 
00E1:  MOVLW  04
00E2:  BSF    03.6
00E3:  MOVWF  0D
00E4:  MOVLW  00
00E5:  MOVWF  0F
00E6:  BCF    03.6
00E7:  CALL   032
....................          break; 
....................          } 
....................       delay_ms(100); 
00E8:  MOVLW  64
00E9:  MOVWF  21
00EA:  GOTO   0A0
00EB:  GOTO   0CC
....................    } 
.................... } 
.................... // ************************************** 
00EC:  GOTO   0EC
....................  
....................  
.................... // **************************************** 
.................... // Definicion de las Funciones 
....................  
.................... void Cargar_configuracion(){ 
....................    SET_TRIS_B(0x00);    //configura PORTB entrada / 0=salida / 1=entrada 
*
002A:  MOVLW  00
002B:  BSF    03.5
002C:  MOVWF  06
....................    OUTPUT_B(0x00);   //inicializando PORTD en 0x00 
002D:  BCF    03.5
002E:  CLRF   06
002F:  BCF    0A.3
0030:  BCF    0A.4
0031:  GOTO   0CC (RETURN)
....................    //SET_TRIS_D(0x00);    //configura PORTD salida 
....................    } 
....................  
.................... void Configurar_interrupciones(){ 
....................    //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_2);   //Configuración timer0 
....................    //set_timer0 (0x1B);                    //Carga del timer0 
....................    //enable_interrupts(INT_TIMER0);       //Habilita interrupción timer0 
....................  
....................    //enable_interrupts(INT_RB);       // Habilitando interrupcion RB /RB4-RB7 
....................    //bit_clear(OPTION_REG,7);         // Habilita el Pull-UP de RB->OPTION_REG,RBPU 
....................    //RBPU=0;                            // Habilita el PullUP de RB  
....................    //enable_interrupts(GLOBAL);       // Habilita las interrupciones 
.................... } 
....................  
.................... void version(){ 
....................    printf("Version de Software: v1"); 
*
007F:  MOVLW  0D
0080:  BSF    03.6
0081:  MOVWF  0D
0082:  MOVLW  00
0083:  MOVWF  0F
0084:  BCF    03.6
0085:  CALL   032
0086:  BCF    0A.3
0087:  BCF    0A.4
0088:  GOTO   0E8 (RETURN)
....................    } 
....................     
.................... void encender_all (){ 
....................    OUTPUT_B(0xFF); 
0089:  MOVLW  FF
008A:  MOVWF  06
....................    printf("Encendidos Todos"); 
008B:  MOVLW  19
008C:  BSF    03.6
008D:  MOVWF  0D
008E:  MOVLW  00
008F:  MOVWF  0F
0090:  BCF    03.6
0091:  CALL   032
0092:  BCF    0A.3
0093:  BCF    0A.4
0094:  GOTO   0E8 (RETURN)
.................... } 
....................  
.................... void apagar_all (){ 
....................    OUTPUT_B(0x00); 
0095:  CLRF   06
....................    printf("Apagados Todos"); 
0096:  MOVLW  22
0097:  BSF    03.6
0098:  MOVWF  0D
0099:  MOVLW  00
009A:  MOVWF  0F
009B:  BCF    03.6
009C:  CALL   032
009D:  BCF    0A.3
009E:  BCF    0A.4
009F:  GOTO   0E8 (RETURN)
.................... } 
.................... //***************************************** 
....................  

Configuration Fuses:
   Word  1: 373A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT DEBUG NOPROTECT

   Some fuses have been forced to be compatible with the ICD debugger.
